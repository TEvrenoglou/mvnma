% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvnma.R
\name{mvnma}
\alias{mvnma}
\title{Perform a Bayesian multivariate network meta-analysis using a
single-correlation coefficient model}
\usage{
mvnma(
  ...,
  reference.group = NULL,
  outclab = NULL,
  n.iter = 10000,
  n.burnin = 2000,
  level = gs("level.ma"),
  scale.psi,
  lower.rho,
  upper.rho,
  quiet = FALSE
)
}
\arguments{
\item{\dots}{Either two to five pairwise objects or a single list with
two to five pairwise objects.}

\item{reference.group}{A common reference treatment across all outcomes.}

\item{outclab}{An optional argument with labels for each outcome. If NULL,
the each outcome is labelled as 'outcome_1', 'outcome_2' etc.}

\item{n.iter}{Number of iterations.}

\item{n.burnin}{Number of iterations for burn-in.}

\item{level}{The level used to calculate confidence intervals
for network estimates.}

\item{scale.psi}{Values for the scale parameter(s) of the Half-Normal prior used for the
heterogeneity parameters within each outcome. If NULL, all values are set to 1. If
specified, it should have a length equal to the number of outcomes.}

\item{lower.rho}{Lower bounds for the Uniform prior(s) used for the
correlation coefficient. If NULL all bounds are set to -1.}

\item{upper.rho}{Upper bounds for the Uniform prior(s) used for the
correlation coefficient. If NULL all bounds are set to 1.}

\item{quiet}{A logical indicating whether to print information on the
progress of the JAGS model fitting.}
}
\value{
The function return an 'mvnma' object. This consists of the results for each
outcome and the correlation coefficient estimates between the combined
outcomes. The outcome-specific estimates are expressed in the format of a
list (one for each outcome) which contains:
\itemize{
\item The basic estimates (i.e. treatment vs. reference.group) for each
  outcome.
\item The heterogeneity estimates for each outcome 
\item The posterior samples corresponding to the basic estimates.
}
}
\description{
This function fits a Bayesian multivariate network meta-analysis model.
Currently, the function can simultaneously pool up to five outcomes.
Additionally, the studies to be included should be of maximum three arms.
}
\details{
The function \code{\link{mvnma}} expects two to five outcomes /
\code{\link[meta]{pairwise}} objects. A common reference treatment across
all outcomes is required. However, this requirement is only for enabling
the calculations, as the function  \code{\link{league}} extracts all
possible comparisons.

The Bayesian multivariate network meta-analysis model fitted in the
\bold{mvnma} package assumes uniform priors for the between-outcome
correlation coefficients. The lower and upper bounds of these priors can be
defined using the arguments `lower.rho` and `upper.rho`. If not set, the
model will assume a `Unif (-1, 1)` prior for all correlation coefficients.
For two outcomes, a single value can be provided for `lower.rho` and
`upper.rho`. For example, `lower.rho` = 0.5 and `upper.rho` = 1 for
rho12 ~ Unif (0.5,1)).
For more than two outcomes, the order in which the bounds are provided
matters. For example, when pooling four outcomes, the lower and
upper bounds correspond to the following order of correlation coefficients:
(rho12, rho13, rho14, rho23, rho24, rho34).
}
\examples{
\donttest{
library("netmeta")

data("Linde2015")

# Use 'pairwise' to obtain contrast based data for each one of the five
# available outcomes 

# Early response
p1 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(resp1, resp2, resp3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Early remissions
p2 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(remi1, remi2, remi3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Adverse events
p3 <- pairwise(treat = list(treatment1, treatment2,treatment3),
  event = list(ae1, ae2, ae3),  n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Loss to follow-up
p4 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(loss1, loss2, loss3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Loss_to_follow_up_(AE)
p5 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(loss.ae1, loss.ae2, loss.ae3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Define outcome labels
outcomes <- c("Early_Response", "Early_Remission",
  "Adverse_events", "Loss_to_follow_up", "Loss_to_follow_up_AE")
 
# Fit the model combining only the two efficacy outcomes
set.seed(1909)
mvnma12 <- mvnma(p1, p2,
  reference.group = "Placebo", outclab = outcomes[1:2],
  n.iter = 1000, n.burnin = 100)
mvnma12
       
# Extract treatment effect estimates and heterogeneity for Early_Response 
mvnma12$Early_Response$basic_estimates
mvnma12$Early_Response$heterogeneity

# Extract outcome correlation
mvnma12$cor

# Plot the results for efficacy outcomes
forest(mvnma12)

# Get all estimates
league12 <- league(mvnma12)

# Fit the model combining all five outcomes
mvnma_all <- mvnma(p1, p2, p3, p4, p5,
  reference.group = "Placebo", outclab = outcomes,
  n.iter = 1000, n.burnin = 100)

# Extract treatment effect estimates and heterogeneity for Early_Response 
mvnma_all$Early_Response$basic_estimates
mvnma_all$Early_Response$heterogeneity      

# Extract outcome correlation 
mvnma_all$cor

# Plot the results for all outcomes
forest(mvnma_all)

# Get all estimates 
league_all <- league(mvnma_all)
}

}
\seealso{
\code{\link[meta]{pairwise}}
}
