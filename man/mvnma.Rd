% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvnma.R
\name{mvnma}
\alias{mvnma}
\title{Perform a Bayesian multivariate network meta-analysis using a
single-correlation coefficient model}
\usage{
mvnma(
  data,
  reference.group = NULL,
  outlab = NULL,
  n.iter = 10000,
  n.burnin = 2000,
  lower.rho = NULL,
  upper.rho = NULL
)
}
\arguments{
\item{data}{An object of class \code{\link{mvdata}}.}

\item{reference.group}{A common reference treatment across all outcomes.}

\item{outlab}{An optional argument with labels for each outcome. If NULL,
the each outcome is labelled as 'outcome_1', 'outcome_2' etc.}

\item{n.iter}{Number of iterations.}

\item{n.burnin}{Number of iterations for burnin.}

\item{lower.rho}{Lower bounds for the Uniform prior(s) used for the correlation
coefficient. If NULL all bounds are set to -1.}

\item{upper.rho}{Upper bounds for the Uniform prior(s) used for the correlation
coefficient. If NULL all bounds are set to 1.}
}
\value{
The function return an 'mvnma' object. This consists of the results for each
outcome and the correlation coefficient estimates between the combined
outcomes. The outcome-specific estimates are expressed in the format of a
list (one for each outcome) which contains:
\itemize{
\item The basic estimates (i.e. treatment vs. reference.group) for each
  outcome.
\item The heterogeneity estimates for each outcome 
\item The posterior samples corresponding to the basic estimates.
}
}
\description{
This function fits a Bayesian multivariate network meta-analysis model.
Currently, the function can simultaneously pool up to five outcomes.
Additionally, the studies to be included should be of maximum three arms.
}
\details{
The function \code{\link{mvnma}} expects data in the format of a "mvdata"
object. This function transforms the data into a suitable format for JAGS.
A common reference treatment across all outcomes is required. However, this
requirement is only for enabling the calculations, as the function 
\code{\link{league}} generates all possible comparisons.

The Bayesian multivariate network meta-analysis model fitted in the
\bold{mvnma} package assumes uniform priors for the between-outcome
correlation coefficients. The lower and upper bounds of these priors can be
defined using the arguments `lower.rho` and `upper.rho`. If not set, the
model will assume a `Unif (-1, 1)` prior for all correlation coefficients.
In cases with cases with two outcomes a single value should be provided for
`lower.rho` and for `upper.rho`. For example when \(rho_{12} ~ Unif (0.5,1)/)
then `lower.rho` = 0.5 and `upper.rho` = 1.
In cases with more than two outcomes, the order in which the bounds are
provided matters. For example, when pooling four outcomes, the lower and
upper bounds correspond to the following order of correlation coefficients:
(rho_{12}, rho_{13}, rho_{14}, rho_{23}, rho_{24}, rho_{34}).
}
\examples{
\donttest{
library("netmeta")

data("Linde2015")

# Use 'pairwise' to obtain contrast based data for each one of the five
# available outcomes 

# Early response

p1 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(resp1, resp2, resp3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Early remissions

p2 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(remi1, remi2, remi3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Adverse events

p3 <- pairwise(treat = list(treatment1, treatment2,treatment3),
  event = list(ae1, ae2, ae3),  n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Loss to follow-up

p4 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(loss1, loss2, loss3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Loss_to_follow_up_(AE)

p5 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(loss.ae1, loss.ae2, loss.ae3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Perform analysis in terms of the efficacy outcomes

p_effic <- list(p1, p2)

# Use 'mvdata()' to transform the data in suitable JAGS format

data_effic <- mvdata(p_effic)

# Define outcome labels

outlab <- c("Early_Response", "Early_Remission",
  "Adverse_events", "Loss_to_follow_up", "Loss_to_follow_up_AE")
 
# Fit the model combining only the two efficacy outcomes
set.seed(1909)
mvmodel_effic <- mvnma(data = data_effic,
  reference.group = "Placebo", outlab = outlab[1:2],
  n.iter = 1000, n.burnin = 100)
              
# Extract treatment effect estimates and heterogeneity for Early_Response 

mvmodel_effic$Early_Response$basic_estimates

mvmodel_effic$Early_Response$heterogeneity      
     
# Extract outcome correlation 

mvmodel_effic$outcome_correlation
             
# Plot the results for efficacy outcomes

forest(mvmodel_effic)

# Get all estimates                 

league.effic <- league(mvmodel_effic)

# Perform analysis in terms of the all outcomes

p_all <- list(p1, p2, p3, p4, p5)

data_all <- mvdata(p_all)

# Fit the model combining all five outcomes

mvmodel_all <- mvnma(data = data_all,
  reference.group = "Placebo", outlab = outlab,
  n.iter = 1000, n.burnin = 100)

# Extract treatment effect estimates and heterogeneity for Early_Response 

mvmodel_all$Early_Response$basic_estimates

mvmodel_all$Early_Response$heterogeneity      
     
# Extract outcome correlation 

mvmodel_all$outcome_correlation

# Plot the results for all outcomes

forest(mvmodel_all)

# Get all estimates                 

league.all <- league(mvmodel_all)
}

}
