% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.mvrank.R
\name{plot.mvrank}
\alias{plot.mvrank}
\title{Scatter plot to visualize the ranking lists for two outcomes.}
\usage{
\method{plot}{mvrank}(
  x,
  which = 1:2,
  pos = 1,
  cex.point = 1,
  cex.label = 0.7,
  pch = 19,
  xlim = c(0, 1),
  ylim = c(0, 1),
  ...
)
}
\arguments{
\item{x}{An object of class \code{\link{mvrank}}.}

\item{which}{A mandatory numeric vector of length 2 specifying which
outcomes should be plotted. For example, setting "outcome = c(2, 3)"
implies that a scatter plot will be generated plotting the rankings
of outcomes 2 and 3.}

\item{pos}{Position of treatment labels.}

\item{cex.point}{a numeric value specifying the size of the points (default: 1)}

\item{cex.label}{a numeric value specifying the size of the point labels in the plot (default: 0.7)}

\item{pch}{a vector of plotting characters or symbols (default: 19)}

\item{xlim}{the x limits of the plot}

\item{ylim}{the y limits of the plot}

\item{...}{Additional arguments for \code{\link{plot}} function.}
}
\description{
Draw a scatter plot (using grid graphics system) in the active graphics
window or store the forest plot in a file.
}
\examples{
\donttest{
library("netmeta")

# Use 'pairwise' to obtain contrast based data for the first two outcomes
data("Linde2015")
# Early response
p1 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(resp1, resp2, resp3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")
# Early remissions
p2 <- pairwise(treat = list(treatment1, treatment2, treatment3),
  event = list(remi1, remi2, remi3), n = list(n1, n2, n3),
  studlab = id, data = dat.linde2015, sm = "OR")

# Define outcome labels
outcomes <- c("Early_Response", "Early_Remission")

# Fit the model combining the two efficacy outcomes
set.seed(1909)
mvnma12 <- mvnma(p1, p2,
  reference.group = "Placebo", outclab = outcomes[1:2],
  n.iter = 1000, n.burnin = 100)
mvnma12

# Rank treatments using SUCRAs
ranks12 <- mvrank(mvnma12, small.values = c("und", "und"), method = "sucra")
ranks12

# Visualize SUCRAs in a scatter plot with outcome 1
# (as specified in the mvdata() function) in the x-axis and outcome 2
# (as specified in the mvdata() function) in the y-axis
plot(ranks12)

# Visualize SUCRAs in a scatter plot with outcome 2
# (as specified in the mvdata() function) in the x-axis and outcome 1
# (as specified in the mvdata() function) in the y-axis
plot(ranks12, which = 2:1)
}

}
